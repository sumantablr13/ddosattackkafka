package com.rxcorp.bdf.datalake.dk9.ndh.loadAsset.model.ods.physical.shared

import com.rxcorp.bdf.datalake.dk9.ndh.loadAsset.common.AppContext
import com.rxcorp.bdf.datalake.dk9.ndh.loadAsset.common.model.PartitionTable
import org.apache.spark.sql.types._

/**
  * Created by sravani vitta on 19/08/2019
  *
  * */

abstract class AbstractDsuppDspnsdRxDetl(appContext: AppContext) extends PartitionTable("") {

  override lazy val logicalName: String = "Data Supplier Dispensed Prescription Detail"
  override lazy val physicalName: String = "dsupp_dspnsd_rx_detl"

  override lazy val tableColumns = Array(

      ("file_cre_dt", "STRING")
    , ("file_id", "STRING")
    , ("dspnsing_oac_id", "STRING")
    , ("dspnsd_rx_trans_id", "STRING")  ///Unique GUID generated across records and across Site files
    , ("dspnsd_rx_grp_id", "STRING")
    , ("dspnsd_rx_item_seq_nbr", "STRING")
    , ("rx_dspnsd_dt", "STRING")
    , ("rx_dspnsd_tm", "STRING")
    , ("pscrng_medpro_encrypt_id", "STRING")
    , ("dspnsing_sys_rec_typ_cd", "STRING")
    , ("dspnsd_rx_collected_ind", "STRING")
    , ("dspnsd_rx_pat_instr_txt", "STRING")
    , ("part_fill_rmng_unit_qty", "STRING")
    , ("nrsg_hm_ind", "STRING")
    , ("med_diag_cd_list_txt", "STRING")
    , ("reimbmnt_catg_cd", "STRING")
    , ("rx_typ_cd", "STRING")
    , ("rx_fill_typ_cd", "STRING")
    , ("rx_fill_st_cd", "STRING")
    , ("cdd_genl_practnr_qty_txt", "STRING")
    , ("dspnsd_qty", "STRING")
    , ("pscr_qty", "STRING")
    , ("dspnsd_rx_item_uom_cd", "STRING")
    , ("dspnsd_rx_item_uom_txt", "STRING")
    , ("dspnsd_multilex_pip_id", "STRING")
    , ("pscr_multilex_pip_id", "STRING")
    , ("dspnsd_mediphase_pip_id", "STRING")
    , ("pscr_mediphase_pip_id", "STRING")
    , ("dspnsd_pip_id", "STRING")
    , ("pscr_pip_id", "STRING")
    , ("dspnsd_prosper_id", "STRING")
    , ("pscr_prosper_id", "STRING")
    , ("dspnsd_link_id", "STRING")
    , ("pscr_link_id", "STRING")
    , ("dspnsd_dmd_id", "STRING")
    , ("pscr_dmd_id", "STRING")
    , ("dspnsd_nexphase_id", "STRING")
    , ("pscr_nexphase_id", "STRING")
    , ("dspnsd_mps_id", "STRING")
    , ("pscr_mps_id", "STRING")
    , ("dspnsd_proscript_id", "STRING")
    , ("pscr_proscript_id", "STRING")
    , ("dspnsd_pmr1_id", "STRING")
    , ("pscr_pmr1_id", "STRING")
    , ("dspnsd_pmr2_id", "STRING")
    , ("pscr_pmr2_id", "STRING")
    , ("dspnsd_othr1_extrnl_id", "STRING")
    , ("pscr_othr1_extrnl_id", "STRING")
    , ("dspnsd_othr2_extrnl_id", "STRING")
    , ("pscr_othr2_extrnl_id", "STRING")
    , ("dspnsd_pcmdty_desc", "STRING")
    , ("pscr_pcmdty_desc", "STRING")
    , ("dspnsd_cmdty_prof_qty", "STRING")
    , ("pscr_cmdty_prof_qty", "STRING")
    , ("dspnsd_cmdty_strnt_txt", "STRING")
    , ("pscr_cmdty_strnt_txt", "STRING")
    , ("dspnsd_generic_pcmdty_ind", "STRING")
    , ("pscr_generic_pcmdty_ind", "STRING")
    , ("dspnsd_ean13_id", "STRING")
    , ("sllr_expc_pay_amt", "STRING")
    , ("bus_eff_dt", "TIMESTAMP")
    , ("publ_eff_ts", "TIMESTAMP")
    , ("proc_eff_ts", "TIMESTAMP")
    , ("src_sys_cre_ts", "TIMESTAMP")
    , ("src_sys_cre_by_nm", "STRING")
    , ("src_sys_updt_ts", "TIMESTAMP")
    , ("src_sys_updt_by_nm", "STRING")
    , ("src_sys_id", "STRING")
    , ("src_sys_impl_id", "STRING")
    , ("src_sys_oprtnl_stat_cd", "STRING")
    , ("src_sys_oprtnl_stat_ts", "STRING")
    , ("src_sys_btch_id","STRING")
    , ("oprtnl_stat_cd", "TINYINT")
    , ("btch_id", "STRING")
  )

  override lazy val partitionColumns = Array(
    ("proc_eff_dt", "INTEGER")
  )

  override lazy val schema = (new StructType)
    .add("file_cre_dt",StringType)
    .add("file_id",StringType)
    .add("dspnsing_oac_id",StringType)
    .add("dspnsd_rx_trans_id",StringType)
    .add("dspnsd_rx_grp_id",StringType)
    .add("dspnsd_rx_item_seq_nbr",StringType)
    .add("rx_dspnsd_dt",StringType)
    .add("rx_dspnsd_tm",StringType)
    .add("pscrng_medpro_encrypt_id",StringType)
    .add("dspnsing_sys_rec_typ_cd",StringType)
    .add("dspnsd_rx_collected_ind",StringType)
    .add("dspnsd_rx_pat_instr_txt",StringType)
    .add("part_fill_rmng_unit_qty",StringType)
    .add("nrsg_hm_ind",StringType)
    .add("med_diag_cd_list_txt",StringType)
    .add("reimbmnt_catg_cd",StringType)
    .add("rx_typ_cd",StringType)
    .add("rx_fill_typ_cd",StringType)
    .add("rx_fill_st_cd",StringType)
    .add("cdd_genl_practnr_qty_txt",StringType)
    .add("dspnsd_qty",StringType)
    .add("pscr_qty",StringType)
    .add("dspnsd_rx_item_uom_cd",StringType)
    .add("dspnsd_rx_item_uom_txt",StringType)
    .add("dspnsd_multilex_pip_id",StringType)
    .add("pscr_multilex_pip_id",StringType)
    .add("dspnsd_mediphase_pip_id",StringType)
    .add("pscr_mediphase_pip_id",StringType)
    .add("dspnsd_pip_id",StringType)
    .add("pscr_pip_id",StringType)
    .add("dspnsd_prosper_id",StringType)
    .add("pscr_prosper_id",StringType)
    .add("dspnsd_link_id",StringType)
    .add("pscr_link_id",StringType)
    .add("dspnsd_dmd_id",StringType)
    .add("pscr_dmd_id",StringType)
    .add("dspnsd_nexphase_id",StringType)
    .add("pscr_nexphase_id",StringType)
    .add("dspnsd_mps_id",StringType)
    .add("pscr_mps_id",StringType)
    .add("dspnsd_proscript_id",StringType)
    .add("pscr_proscript_id",StringType)
    .add("dspnsd_pmr1_id",StringType)
    .add("pscr_pmr1_id",StringType)
    .add("dspnsd_pmr2_id",StringType)
    .add("pscr_pmr2_id",StringType)
    .add("dspnsd_othr1_extrnl_id",StringType)
    .add("pscr_othr1_extrnl_id",StringType)
    .add("dspnsd_othr2_extrnl_id",StringType)
    .add("pscr_othr2_extrnl_id",StringType)
    .add("dspnsd_pcmdty_desc",StringType)
    .add("pscr_pcmdty_desc",StringType)
    .add("dspnsd_cmdty_prof_qty",StringType)
    .add("pscr_cmdty_prof_qty",StringType)
    .add("dspnsd_cmdty_strnt_txt",StringType)
    .add("pscr_cmdty_strnt_txt",StringType)
    .add("dspnsd_generic_pcmdty_ind",StringType)
    .add("pscr_generic_pcmdty_ind",StringType)
    .add("dspnsd_ean13_id",StringType)
    .add("sllr_expc_pay_amt",StringType)
    .add("bus_eff_dt",TimestampType)
    .add("publ_eff_ts",TimestampType)
    .add("proc_eff_ts",TimestampType)
    .add("src_sys_cre_ts",TimestampType)
    .add("src_sys_cre_by_nm",StringType)
    .add("src_sys_updt_ts",TimestampType)
    .add("src_sys_updt_by_nm",StringType)
    .add("src_sys_id",StringType)
    .add("src_sys_impl_id",StringType)
    .add("src_sys_oprtnl_stat_cd",StringType)
    .add("src_sys_oprtnl_stat_ts",StringType)
    .add("src_sys_btch_id",StringType)
    .add("oprtnl_stat_cd",ShortType)
    .add("btch_id",StringType)
    .add("proc_eff_dt",IntegerType)


  override lazy val createTableOpts =
    s"""
    STORED AS PARQUET
    TBLPROPERTIES ('parquet.compression'='SNAPPY')
  """

  def helperCreatePartitionSpec(procEffDt: Int): String = s"proc_eff_dt=CAST('${procEffDt}' AS INT)"

}
